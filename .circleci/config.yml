version: 2

# Assumed environment variables from config:
#   DOCKERHUB_USER:  Docker Hub user to push to Hub as
#   DOCKERHUB_PASS:  A token or somesuch to authenticate to Docker Hub
# Optional environment variables:
#   IMAGE_NAME:      Name of the image to build

# It's a tiny job, but we still use multiple stages because:
# 1. A failure to push to dockerhub does not mean the code is broken and should
#    not cause CI to fail.
# 2. We only want to push to Docker Hub on master

# I've done this before with theoretically-more-sound YAML: DRY principle via
# references.  It works, but it's a tangled mess and I don't even like to look
# at it.  Ugh.  This time, we repeat ourselves and end up with a shorter and
# simpler configuration where I can understand what's going on without jumping
# back and forth.  Yes, "/tmp/persist" gets repeated and there might be a typo.
# It's still better than using YAML "correctly".

jobs:
  build:
    docker:
      # If changing this ALSO: change once below, and once in the Dockerfile
      - image: circleci/golang:1.14.6
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Report and Test
          command: |
            go version
            go test -v ./...
            go list -m all
      - run:
          name: Build Docker Image
          command: |
            mkdir -pv /tmp/persist
            : "${IMAGE_NAME:=pennocktech/fingerd}"
            TAG="$(git describe --tags --always --dirty)"
            if [ "$(git describe --abbrev=0)" = "$TAG" ]; then RELEASE=true; else RELEASE=false; fi
            TAG="${TAG#v}"
            typeset -p IMAGE_NAME TAG RELEASE > /tmp/persist/docker-env.sh
            docker build -f examples/Dockerfile -t "$IMAGE_NAME:$TAG" .
            docker save -o /tmp/persist/docker-layers.tar "$IMAGE_NAME:$TAG"
      - persist_to_workspace:
          root: /tmp/persist
          paths: .

  push_docker_hub:
    docker:
      # If changing this ALSO: change once above, and once in the Dockerfile
      - image: circleci/golang:1.14.6
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: /tmp/persist
      - run:
          name: Load Docker image from persisted workspace
          command: docker load -i /tmp/persist/docker-layers.tar
      - run:
          name: Docker Login to Docker Hub
          command: |
            emit_env_var() { bash -c 'for x; do typeset -p $x | sed -Ee "s,^[^\"]+\"(.+)\"$,\1,"; done' dummy "$@"; }
            source /tmp/persist/docker-env.sh
            emit_env_var DOCKERHUB_PASS | docker login -u "$DOCKERHUB_USER" --password-stdin
            docker push "$IMAGE_NAME:$TAG"
            if $RELEASE; then docker tag "$IMAGE_NAME:$TAG" "$IMAGE_NAME:latest"; docker push "$IMAGE_NAME:latest"; fi

workflows:
  version: 2
  build_and_push:
    jobs:
      - build
      - push_docker_hub:
          context: heroku-and-dockerhub
          requires:
            - build
          filters:
            branches:
              only:
                - master
                - release
                - /.+-hub/

